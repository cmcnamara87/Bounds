<?php

function resource_helper_index($entity_type, $page, $fields, $parameters, $page_size) {

    $query = new EntityFieldQuery();

    $query->entityCondition('entity_type', $entity_type);

    foreach($parameters as $parameter => $value) {
        if(is_numeric($value)) {
            $query->propertyCondition($parameter, $value);
        } else {
            // its a string, lets do a starts with
            $query->propertyCondition($parameter, $value, 'STARTS_WITH');
        }
    }

    $query->range($page * $page_size, $page_size);

    $result = $query->execute();

    $ids = array_keys($result[$entity_type]);

    $entity_function = $entity_type . "_load_multiple";

    return call_user_func($entity_function, $ids);
}


function user_load_small($uid, $reset = FALSE) {
    $users = user_load_multiple_small(array($uid), array(), $reset);
    return reset($users);
}

function user_load_multiple_small($uids = array(), $conditions = array(), $reset = FALSE) {
    $users = entity_load('user', $uids, $conditions, $reset);

    $small_users = array();
    foreach($users as $user) {
        $small_user = new stdClass();
        $small_user->uid = $user->uid;
        $small_user->name = $user->name;
        $small_user->mail = $user->mail;
        $small_user->roles = $user->roles;

        $small_user->created = $user->created;
        $small_user->access = $user->access;
        $small_user->login = $user->login;
        $small_user->status = $user->status;
        $small_user->timezone = $user->timezone;

        $small_users[] = $small_user;
    }

    return $small_users;
}


/**
 * Implements hook_menu().
 *
 * Services UI is defined in the export-ui plugin.
 */
function resource_helper_menu() {
    $items = array();

    $items['resource_helper/session/token'] = array(
        'page callback' => '_resource_helper_session_token',
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );

    return $items;
}

/**
 * Page callback to generate token.
 */
function _resource_helper_session_token() {
    drupal_add_http_header('Content-Type', 'text/plain');

    $token = array(
        "token" => drupal_get_token('services')
    );

    echo json_encode($token);
    drupal_exit();
}